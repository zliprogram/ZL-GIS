<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.gdal.dao.VectorTileMapper">
  <resultMap id="BaseResultMap" type="org.example.gdal.domain.VectorTile">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="geom" jdbcType="OTHER" property="geom" />
    <result column="tile" jdbcType="BINARY" property="tile"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from vector_tile
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.example.gdal.domain.VectorTile">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into vector_tile (id, `name`, geom)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{geom,jdbcType=OTHER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.example.gdal.domain.VectorTile">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update vector_tile
    set `name` = #{name,jdbcType=VARCHAR},
      geom = #{geom,jdbcType=OTHER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, `name`, geom
    from vector_tile
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, `name`, geom
    from vector_tile
  </select>

  <select id="selectTile" resultMap="BaseResultMap" parameterType="org.example.gdal.domain.TileBox">
    SELECT
        ST_AsMVT ( tile, 'points' ) tile
    FROM
        (
        SELECT
            st_asmvtgeom (
                T.geom,
                st_makeenvelope (
                    #{ xmin,jdbcType = NUMERIC },
                    #{ ymin,jdbcType = NUMERIC },
                    #{ xmax,jdbcType = NUMERIC },
                    #{ ymax,jdbcType = NUMERIC },
                    4326
                ),
                4096,
                0,
            TRUE
            ) AS geom
        FROM
            <if test = "z&lt;10" >
                vector_tile_gd_cache T
            </if>
            <if test = "z&gt;=10" >
                vector_tile_gd T
            </if>
        ) AS tile
    WHERE
        tile.geom IS NOT NULL;
  </select>

    <select id="selectVectorTiles" resultType="org.example.gdal.domain.VectorTile">
        SELECT ST_AsMVT(vt,'point',4096,'geo') tile
        FROM
            (
                SELECT
                    ST_SetSRID ( ST_Point ( ST_X ( A.geom ), ST_Y ( A.geom )), 4326 ) geo
                FROM
                    (
                        SELECT ST_AsMVTGeom(geom,Box2D(TileBBox(#{z,jdbcType=NUMERIC},#{x,jdbcType=NUMERIC},#{y,jdbcType=NUMERIC},4326)),4096,0,true) AS geom
                            FROM PUBLIC."vector_tile"
                             WHERE TileBBox(#{z,jdbcType=NUMERIC},#{x,jdbcType=NUMERIC},#{y,jdbcType=NUMERIC},4326)&amp;&amp;geom
                    ) A
                GROUP BY
                    ST_X ( A.geom ),
                    ST_Y ( A.geom )
            ) AS vt
    </select>

</mapper>